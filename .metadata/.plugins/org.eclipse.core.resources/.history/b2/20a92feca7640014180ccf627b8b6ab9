package vn.onepay.search.api;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;
import org.springframework.ui.ModelMap;
import org.springframework.web.servlet.ModelAndView;

import vn.onepay.account.model.Account;
import vn.onepay.card.dao.ErrorConfigDAO;
import vn.onepay.card.model.ErrorConfig;
import vn.onepay.common.SharedConstants;
import vn.onepay.web.secure.controllers.AbstractProtectedController;

public class CardChargingErrorConfigAjax extends AbstractProtectedController{
  ErrorConfigDAO errorConfigDAO;

  public void setErrorConfigDAO(ErrorConfigDAO errorConfigDAO) {
    this.errorConfigDAO = errorConfigDAO;
  }
  
  private enum Action {
    ADD_EDIT, DELETE
  }

  @Override
  protected ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response, ModelMap model)
      throws Exception {
    response.setContentType("text/html");
    Account account = (Account) request.getSession()
        .getAttribute(SharedConstants.ACCOUNT_LOGINED);
    if (account == null) {
      response.getOutputStream().write(
          "Bạn chưa đăng nhập!".getBytes("UTF-8"));
      return null;
    }
    
    String actionRequest = StringUtils.trimToEmpty(request.getParameter("action"));
    
    
    Action action = null;
    try{
      action = Action.valueOf(actionRequest);
    }catch(Exception e){
      e.printStackTrace();
    }
    
    if(action == null){
      response.getOutputStream().write(
          "Không tồn tại yêu cầu, hãy thử lại sau!".getBytes("utf8"));
      return null;
    }
    
    switch(action){
    case ADD_EDIT:
      modifyData(request, response, account);
      break;
    case DELETE:
      deleteData(request, response, account);
      break;
    }
    response.getOutputStream().write("ok".getBytes("utf-8"));
    
    return null;
  }

  private void deleteData(HttpServletRequest request, HttpServletResponse response, Account account) {
    // TODO Auto-generated method stub
    
  }

  private void modifyData(HttpServletRequest request, HttpServletResponse response, Account account) throws UnsupportedEncodingException, IOException {
    String id = StringUtils.trimToEmpty(request.getParameter("id"));
    String title = StringUtils.trimToEmpty(request.getParameter("title"));
    String telco = StringUtils.trimToEmpty(request.getParameter("telco"));
    String from_time = StringUtils.trimToEmpty(request.getParameter("from_time"));
    String end_time = StringUtils.trimToEmpty(request.getParameter("end_time"));
    
    ErrorConfig errorConfig = new ErrorConfig();
    //new record
    if(id.equals("")){
      errorConfig.setCreated_time(new Date());
      
    }else{
      errorConfig = errorConfigDAO.getErrorConfig(id);
      
    }
    
    errorConfig.setTitle(title);
    errorConfig.setTelco(telco);
    
    errorConfig.setUpdated_time(new Date());
    
    errorConfigDAO.save(errorConfig);
    
    if (!id.equalsIgnoreCase("")) {
      response.getOutputStream().write(
          "Sửa phiếu thành công!".getBytes("UTF-8"));
      return;
    }

    response.getOutputStream().write(
        "Lập phiếu thành công!".getBytes("UTF-8"));
  }
  
  
}
